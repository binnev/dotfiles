// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+backspace",
        "command": "editor.action.deleteLines"
    },
    {
        "key": "alt+[",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "alt+]",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "alt+shift+[",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "alt+shift+]",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "editor.action.insertLineBefore"
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+z",
        "command": "git.revertSelectedRanges"
    },
    {
        "key": "ctrl+shift+alt+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "alt+d",
        "command": "editor.action.duplicateSelection"
    },
    {
        "key": "alt+n",
        "command": "editor.action.addSelectionToNextFindMatch"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+alt+y",
        "command": "terminal.focus",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+r",
        "command": "python.execInTerminal-icon"
    },
    {
        "key": "alt+.",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "ctrl+alt+s",
        "command": "outline.toggleVisibility",
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+alt+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+alt+n",
        "command": "git.branch"
    },
    {
        "key": "ctrl+shift+d",
        "command": "python.debugInTerminal"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+i",
        "command": "rewrap.rewrapComment",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+q",
        "command": "-rewrap.rewrapComment",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+h",
        "command": "git.checkout"
    },
    {
        "key": "ctrl+alt+o",
        "command": "editor.action.organizeImports",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "shift+alt+o",
        "command": "-editor.action.organizeImports",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "ctrl+alt+o",
        "command": "-workbench.action.remote.showMenu"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.zoomReset"
    },
    {
        "key": "ctrl+numpad0",
        "command": "-workbench.action.zoomReset"
    },
    {
        "key": "shift+alt+y",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "alt+\\",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+meta+t",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+[",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+alt+]",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "alt+=",
        "command": "workbench.action.toggleMaximizedPanel"
    }
]